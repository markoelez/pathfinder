{"version":3,"sources":["styles/mui_theme.js","components/grid/node/node.js","algorithms/bfs.js","components/grid/grid.js","components/navstrip/navstrip.js","components/App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","green","status","danger","Node","this","props","row","col","isStart","isTarget","isWall","onMouseDown","onMouseEnter","onMouseUp","type","id","className","React","Component","bfs","grid","startNode","targetNode","visitedNodes","queue","dirs","push","isVisited","length","size","i","node","shift","j","d","nr","nc","previousNode","Grid","getNewEndpoints","start_row","start_col","target_row","target_col","state","start","target","mouseIsPressed","algorithm","genInitialGrid","setState","newGrid","toggleWall","getNewGrid","document","getElementById","nodes","shortestOrder","setTimeout","animateShortestPath","console","log","visited","order","current","unshift","getShortestPath","animateBFS","genMaze","Button","variant","color","onClick","resetGrid","visualize","generateMaze","map","rowIdx","key","nodeIdx","handleMouseDown","handleMouseEnter","handleMouseUp","createNode","Math","floor","random","getEmptyNode","probability","n","slice","newNode","App","ThemeProvider","ReactDOM","render"],"mappings":"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","file":"static/js/main.967228b5.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\nimport orange from '@material-ui/core/colors/orange'\nimport green from '@material-ui/core/colors/green'\n\nexport const theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: '#f95959',\n\t\t\tmain: '#f95959',\n\t\t\tdark: '#f95959',\n\t\t\tcontrastText: '#eeeeee'\n\t\t},\n\t\tsecondary: green\n\t},\n\tstatus: {\n\t\tdanger: 'orange'\n\t}\n})\n","import React from 'react'\nimport './node.css'\n\nclass Node extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\trow,\n\t\t\tcol,\n\t\t\tisStart,\n\t\t\tisTarget,\n\t\t\tisWall,\n\t\t\tonMouseDown,\n\t\t\tonMouseEnter,\n\t\t\tonMouseUp\n\t\t} = this.props\n\t\tconst type = isWall\n\t\t\t? 'wall'\n\t\t\t: isStart\n\t\t\t? 'node-start'\n\t\t\t: isTarget\n\t\t\t? 'node-target'\n\t\t\t: 'node-empty'\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={`node-${row}-${col}`}\n\t\t\t\tclassName={`node ${type}`}\n\t\t\t\tonMouseDown={() => onMouseDown(row, col)}\n\t\t\t\tonMouseEnter={() => onMouseEnter(row, col)}\n\t\t\t\tonMouseUp={() => onMouseUp()}\n\t\t\t></div>\n\t\t)\n\t}\n}\n\nexport default Node\n","export function bfs(grid, startNode, targetNode) {\n\tconst visitedNodes = []\n\tlet queue = []\n\tconst dirs = [\n\t\t[0, 1],\n\t\t[0, -1],\n\t\t[1, 0],\n\t\t[-1, 0]\n\t]\n\tqueue.push(startNode)\n\tstartNode.isVisited = true\n\twhile (queue.length > 0) {\n\t\tlet size = queue.length\n\t\tfor (let i = 0; i < size; ++i) {\n\t\t\tlet node = queue.shift()\n\t\t\tfor (let j = 0; j < dirs.length; ++j) {\n\t\t\t\tconst d = dirs[j]\n\t\t\t\tlet nr = d[0] + node.row\n\t\t\t\tlet nc = d[1] + node.col\n\t\t\t\tif (nr < 0 || nc < 0 || nr >= grid.length || nc >= grid[0].length)\n\t\t\t\t\tcontinue\n\t\t\t\tif (grid[nr][nc].isWall) continue\n\t\t\t\tif (grid[nr][nc].isVisited) continue\n\t\t\t\tif (nr == targetNode.row && nc == targetNode.col) {\n\t\t\t\t\tgrid[nr][nc].previousNode = grid[node.row][node.col]\n\t\t\t\t\tvisitedNodes.push(grid[nr][nc])\n\t\t\t\t\treturn visitedNodes\n\t\t\t\t}\n\t\t\t\tgrid[nr][nc].isVisited = true\n\t\t\t\tgrid[nr][nc].previousNode = grid[node.row][node.col]\n\t\t\t\tvisitedNodes.push(grid[nr][nc])\n\t\t\t\tqueue.push(grid[nr][nc])\n\t\t\t}\n\t\t}\n\t}\n\treturn visitedNodes\n}\n\nexport function dfs(grid, startNode, targetNode) {\n\tconst visitedNodes = []\n\tlet stack = []\n\tconst dirs = [\n\t\t[0, 1],\n\t\t[0, -1],\n\t\t[1, 0],\n\t\t[-1, 0]\n\t]\n\tstack.push(startNode)\n\tstartNode.isVisited = true\n\twhile (stack.length > 0) {\n\t\tlet size = stack.length\n\t\tfor (let i = 0; i < size; ++i) {\n\t\t\tlet node = stack.pop()\n\t\t\tfor (let j = 0; j < dirs.length; ++j) {\n\t\t\t\tconst d = dirs[j]\n\t\t\t\tlet nr = d[0] + node.row\n\t\t\t\tlet nc = d[1] + node.col\n\t\t\t\tif (nr < 0 || nc < 0 || nr >= grid.length || nc >= grid[0].length)\n\t\t\t\t\tcontinue\n\t\t\t\tif (grid[nr][nc].isWall) continue\n\t\t\t\tif (grid[nr][nc].isVisited) continue\n\t\t\t\tif (nr == targetNode.row && nc == targetNode.col) {\n\t\t\t\t\tgrid[nr][nc].previousNode = grid[node.row][node.col]\n\t\t\t\t\tvisitedNodes.push(grid[nr][nc])\n\t\t\t\t\treturn visitedNodes\n\t\t\t\t}\n\t\t\t\tgrid[nr][nc].isVisited = true\n\t\t\t\tgrid[nr][nc].previousNode = grid[node.row][node.col]\n\t\t\t\tvisitedNodes.push(grid[nr][nc])\n\t\t\t\tstack.push(grid[nr][nc])\n\t\t\t}\n\t\t}\n\t}\n\treturn visitedNodes\n}\n\nexport function getShortestPath(target) {\n\tconst order = []\n\tlet current = target\n\twhile (current !== null) {\n\t\tconsole.log('tree')\n\t\tconsole.log(current.previousNode)\n\t\torder.unshift(current)\n\t\tcurrent = current.previousNode\n\t}\n\treturn order\n}\n","import React from 'react'\nimport Node from './node/node'\nimport { Button, Slider } from '@material-ui/core'\nimport { dfs, bfs, getShortestPath } from '../../algorithms/bfs'\nimport './grid.css'\n\nexport const TOTAL_ROWS = 27\nexport const TOTAL_COLS = 70\n\nconst SPEED_MULTIPLIER = 5\nconst PATH_SPEED_MULTIPLIER = 40\n\nclass Grid extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tconst { start_row, start_col, target_row, target_col } = getNewEndpoints()\n\n\t\tthis.state = {\n\t\t\tstart: [start_row, start_col],\n\t\t\ttarget: [target_row, target_col],\n\t\t\tgrid: [],\n\t\t\tmouseIsPressed: false,\n\t\t\talgorithm: bfs\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { start, target } = this.state\n\t\tconst grid = genInitialGrid(start, target)\n\t\tthis.setState({ grid: grid })\n\t}\n\n\thandleMouseDown(row, col) {\n\t\tconst newGrid = toggleWall(this.state.grid, row, col)\n\t\tthis.setState({ grid: newGrid, mouseIsPressed: true })\n\t}\n\n\thandleMouseEnter(row, col) {\n\t\tif (!this.state.mouseIsPressed) return\n\t\tconst newGrid = toggleWall(this.state.grid, row, col)\n\t\tthis.setState({ grid: newGrid })\n\t}\n\n\thandleMouseUp() {\n\t\tthis.setState({ mouseIsPressed: false })\n\t}\n\n\tresetGrid() {\n\t\tconst grid = getNewGrid()\n\t\tfor (let i = 0; i < grid.length; ++i) {\n\t\t\tfor (let j = 0; j < grid[0].length; ++j) {\n\t\t\t\tdocument.getElementById(`node-${i}-${j}`).className = 'node node-empty'\n\t\t\t}\n\t\t}\n\n\t\tconst { start_row, start_col, target_row, target_col } = getNewEndpoints()\n\n\t\tdocument.getElementById(`node-${start_row}-${start_col}`).className =\n\t\t\t'node node-start'\n\t\tdocument.getElementById(`node-${target_row}-${target_col}`).className =\n\t\t\t'node node-target'\n\n\t\tthis.setState({\n\t\t\tgrid: grid,\n\t\t\tstart: [start_row, start_col],\n\t\t\ttarget: [target_row, target_col]\n\t\t})\n\t}\n\n\tanimateBFS(nodes, shortestOrder) {\n\t\tfor (let i = 0; i <= nodes.length; ++i) {\n\t\t\tif (i === nodes.length) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.animateShortestPath(shortestOrder)\n\t\t\t\t}, SPEED_MULTIPLIER * i)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (i == nodes.length - 1) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tconst node = nodes[i]\n\t\t\tconsole.log('test')\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t'node node-visited'\n\t\t\t}, SPEED_MULTIPLIER * i)\n\t\t}\n\t}\n\n\tanimateShortestPath(shortestOrder) {\n\t\tfor (let i = 0; i < shortestOrder.length; i++) {\n\t\t\tif (i == 0 || i == shortestOrder.length - 1) continue\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst node = shortestOrder[i]\n\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t'node node-shortest-path'\n\t\t\t}, PATH_SPEED_MULTIPLIER * i)\n\t\t}\n\t}\n\n\tvisualize() {\n\t\tconst { grid, start, target, algorithm } = this.state\n\t\tconst startNode = grid[start[0]][start[1]]\n\t\tconst targetNode = grid[target[0]][target[1]]\n\t\tconst visited = algorithm(grid, startNode, targetNode)\n\t\tconst shortestOrder = getShortestPath(visited[visited.length - 1])\n\t\tthis.animateBFS(visited, shortestOrder)\n\t}\n\n\tgenerateMaze() {\n\t\tconst grid = genMaze()\n\n\t\tconst { start, target } = this.state\n\n\t\tgrid[start[0]][start[1]].isWall = false\n\t\tgrid[start[0]][start[1]].isStart = true\n\n\t\tgrid[target[0]][target[1]].isWall = false\n\t\tgrid[target[0]][target[1]].isTarget = true\n\n\t\tdocument.getElementById(`node-${start[0]}-${start[1]}`).className =\n\t\t\t'node node-start'\n\t\tdocument.getElementById(`node-${target[0]}-${target[1]}`).className =\n\t\t\t'node node-target'\n\n\t\tthis.setState({\n\t\t\tgrid: grid\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { grid } = this.state\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='secondary'\n\t\t\t\t\tonClick={() => this.resetGrid()}\n\t\t\t\t>\n\t\t\t\t\treset\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tonClick={() => this.visualize()}\n\t\t\t\t>\n\t\t\t\t\tstart\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tonClick={() => this.generateMaze()}\n\t\t\t\t>\n\t\t\t\t\tgenerate maze\n\t\t\t\t</Button>\n\t\t\t\t<div className='grid'>\n\t\t\t\t\t{grid.map((row, rowIdx) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={rowIdx}>\n\t\t\t\t\t\t\t\t{row.map((node, nodeIdx) => {\n\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\trow,\n\t\t\t\t\t\t\t\t\t\tcol,\n\t\t\t\t\t\t\t\t\t\tisStart,\n\t\t\t\t\t\t\t\t\t\tisTarget,\n\t\t\t\t\t\t\t\t\t\tisVisited,\n\t\t\t\t\t\t\t\t\t\tisWall\n\t\t\t\t\t\t\t\t\t} = node\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Node\n\t\t\t\t\t\t\t\t\t\t\trow={row}\n\t\t\t\t\t\t\t\t\t\t\tcol={col}\n\t\t\t\t\t\t\t\t\t\t\tkey={nodeIdx}\n\t\t\t\t\t\t\t\t\t\t\tisStart={isStart}\n\t\t\t\t\t\t\t\t\t\t\tisTarget={isTarget}\n\t\t\t\t\t\t\t\t\t\t\tisVisited={isVisited}\n\t\t\t\t\t\t\t\t\t\t\tisWall={isWall}\n\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(row, col) => this.handleMouseDown(row, col)}\n\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={(row, col) =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleMouseEnter(row, col)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tonMouseUp={() => this.handleMouseUp()}\n\t\t\t\t\t\t\t\t\t\t></Node>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst genInitialGrid = (start, target) => {\n\tconst grid = []\n\tfor (let i = 0; i < TOTAL_ROWS; ++i) {\n\t\tconst row = []\n\t\tfor (let j = 0; j < TOTAL_COLS; ++j) {\n\t\t\trow.push(createNode(i, j, start, target))\n\t\t}\n\t\tgrid.push(row)\n\t}\n\treturn grid\n}\n\nconst getNewEndpoints = () => {\n\tvar start_row = Math.floor(Math.random() * TOTAL_ROWS)\n\tvar start_col = Math.floor(Math.random() * TOTAL_COLS)\n\tvar target_row = Math.floor(Math.random() * TOTAL_ROWS)\n\tvar target_col = Math.floor(Math.random() * TOTAL_COLS)\n\twhile (start_row == target_row && start_col == target_col) {\n\t\ttarget_row = Math.floor(Math.random() * TOTAL_ROWS)\n\t\ttarget_col = Math.floor(Math.random() * TOTAL_COLS)\n\t}\n\treturn { start_row, start_col, target_row, target_col }\n}\n\nconst getNewGrid = () => {\n\tconst grid = []\n\tfor (let i = 0; i < TOTAL_ROWS; ++i) {\n\t\tconst row = []\n\t\tfor (let j = 0; j < TOTAL_COLS; ++j) {\n\t\t\trow.push(getEmptyNode(i, j))\n\t\t}\n\t\tgrid.push(row)\n\t}\n\treturn grid\n}\n\nconst genMaze = () => {\n\tconst grid = getNewGrid()\n\tfor (let i = 0; i < TOTAL_ROWS; ++i) {\n\t\tfor (let j = 0; j < TOTAL_COLS; ++j) {\n\t\t\tif (probability(0.2)) {\n\t\t\t\ttoggleWall(grid, i, j)\n\t\t\t}\n\t\t}\n\t}\n\treturn grid\n}\n\nconst getEmptyNode = (row, col) => {\n\treturn {\n\t\trow,\n\t\tcol,\n\t\tisStart: false,\n\t\tisTarget: false,\n\t\tisVisited: false,\n\t\tisWall: false,\n\t\tpreviousNode: null\n\t}\n}\n\nvar probability = function(n) {\n\treturn !!n && Math.random() <= n\n}\n\nconst createNode = (row, col, start, target) => {\n\treturn {\n\t\trow,\n\t\tcol,\n\t\tisStart: row == start[0] && col == start[1],\n\t\tisTarget: row == target[0] && col == target[1],\n\t\tisVisited: false,\n\t\tisWall: false,\n\t\tpreviousNode: null\n\t}\n}\n\nconst toggleWall = (grid, row, col) => {\n\tconst newGrid = grid.slice()\n\tconst node = newGrid[row][col]\n\tconst newNode = {\n\t\t...node,\n\t\tisWall: true\n\t}\n\tnewGrid[row][col] = newNode\n\treturn newGrid\n}\n\nexport default Grid\n","import React from 'react'\nimport { Button } from '@material-ui/core'\n\nexport default class Navstrip extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='rows'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<h1>Pathfinder</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<Button>test</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { theme } from '../styles/mui_theme'\nimport Grid from './grid/grid'\nimport './App.css'\nimport Navstrip from './navstrip/navstrip'\n\nfunction App() {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<Grid />\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}