{"version":3,"sources":["styles/mui_theme.js","components/grid/node/node.js","algorithms/bfs.js","algorithms/maze_gen.js","components/grid/grid.js","components/navstrip/navstrip.js","components/App.js","index.js"],"names":["theme","createMuiTheme","overrides","MuiButton","root","margin","padding","palette","primary","light","main","dark","contrastText","secondary","status","danger","Node","this","props","row","col","isStart","isTarget","isWall","onMouseDown","onMouseEnter","onMouseUp","type","id","className","React","Component","bfs","grid","startNode","targetNode","visitedNodes","queue","dirs","push","isVisited","length","size","i","node","shift","j","d","nr","nc","previousNode","probability","n","Math","random","Grid","getNewEndpoints","start_row","start_col","target_row","target_col","state","start","target","mouseIsPressed","algorithm","genInitialGrid","setState","newGrid","toggleWall","getNewGrid","nodes","shortestOrder","setTimeout","animateShortestPath","console","log","document","getElementById","visited","order","current","unshift","getShortestPath","animateBFS","Button","variant","color","onClick","resetGrid","generateMaze","randomMaze","recursiveMaze","visualize","map","rowIdx","key","nodeIdx","handleMouseDown","handleMouseEnter","handleMouseUp","createNode","getRandomInt","TOTAL_ROWS","TOTAL_COLS","getEmptyNode","walls","rows","cols","genRandomMaze","genRecursizeMaze","slice","newNode","min","max","ceil","floor","App","ThemeProvider","ReactDOM","render"],"mappings":"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","file":"static/js/main.bf645331.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\nimport orange from '@material-ui/core/colors/orange'\nimport green from '@material-ui/core/colors/green'\n\nexport const theme = createMuiTheme({\n\toverrides: {\n\t\tMuiButton: {\n\t\t\troot: {\n\t\t\t\tmargin: '10px',\n\t\t\t\tpadding: '10px'\n\t\t\t}\n\t\t}\n\t},\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: '#62d2a2',\n\t\t\tmain: '#62d2a2',\n\t\t\tdark: '#62d2a2',\n\t\t\tcontrastText: '#eeeeee'\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: '#e84a5f',\n\t\t\tmain: '#e84a5f',\n\t\t\tdark: '#e84a5f',\n\t\t\tcontrastText: '#eeeeee'\n\t\t}\n\t},\n\tstatus: {\n\t\tdanger: 'orange'\n\t}\n})\n","import React from 'react'\nimport './node.css'\n\nclass Node extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\trow,\n\t\t\tcol,\n\t\t\tisStart,\n\t\t\tisTarget,\n\t\t\tisWall,\n\t\t\tonMouseDown,\n\t\t\tonMouseEnter,\n\t\t\tonMouseUp\n\t\t} = this.props\n\t\tconst type = isWall\n\t\t\t? 'wall'\n\t\t\t: isStart\n\t\t\t? 'node-start'\n\t\t\t: isTarget\n\t\t\t? 'node-target'\n\t\t\t: 'node-empty'\n\t\treturn (\n\t\t\t<td\n\t\t\t\tid={`node-${row}-${col}`}\n\t\t\t\tclassName={`node ${type}`}\n\t\t\t\tonMouseDown={() => onMouseDown(row, col)}\n\t\t\t\tonMouseEnter={() => onMouseEnter(row, col)}\n\t\t\t\tonMouseUp={() => onMouseUp()}\n\t\t\t></td>\n\t\t)\n\t}\n}\n\nexport default Node\n","export function bfs(grid, startNode, targetNode) {\n\tconst visitedNodes = []\n\tlet queue = []\n\tconst dirs = [\n\t\t[0, 1],\n\t\t[0, -1],\n\t\t[1, 0],\n\t\t[-1, 0]\n\t]\n\tqueue.push(startNode)\n\tstartNode.isVisited = true\n\twhile (queue.length > 0) {\n\t\tlet size = queue.length\n\t\tfor (let i = 0; i < size; ++i) {\n\t\t\tlet node = queue.shift()\n\t\t\tfor (let j = 0; j < dirs.length; ++j) {\n\t\t\t\tconst d = dirs[j]\n\t\t\t\tlet nr = d[0] + node.row\n\t\t\t\tlet nc = d[1] + node.col\n\t\t\t\tif (nr < 0 || nc < 0 || nr >= grid.length || nc >= grid[0].length)\n\t\t\t\t\tcontinue\n\t\t\t\tif (grid[nr][nc].isWall) continue\n\t\t\t\tif (grid[nr][nc].isVisited) continue\n\t\t\t\tif (nr == targetNode.row && nc == targetNode.col) {\n\t\t\t\t\tgrid[nr][nc].previousNode = grid[node.row][node.col]\n\t\t\t\t\tvisitedNodes.push(grid[nr][nc])\n\t\t\t\t\treturn visitedNodes\n\t\t\t\t}\n\t\t\t\tgrid[nr][nc].isVisited = true\n\t\t\t\tgrid[nr][nc].previousNode = grid[node.row][node.col]\n\t\t\t\tvisitedNodes.push(grid[nr][nc])\n\t\t\t\tqueue.push(grid[nr][nc])\n\t\t\t}\n\t\t}\n\t}\n\treturn visitedNodes\n}\n\nexport function dfs(grid, startNode, targetNode) {\n\tconst visitedNodes = []\n\tlet stack = []\n\tconst dirs = [\n\t\t[0, 1],\n\t\t[0, -1],\n\t\t[1, 0],\n\t\t[-1, 0]\n\t]\n\tstack.push(startNode)\n\tstartNode.isVisited = true\n\twhile (stack.length > 0) {\n\t\tlet size = stack.length\n\t\tfor (let i = 0; i < size; ++i) {\n\t\t\tlet node = stack.pop()\n\t\t\tfor (let j = 0; j < dirs.length; ++j) {\n\t\t\t\tconst d = dirs[j]\n\t\t\t\tlet nr = d[0] + node.row\n\t\t\t\tlet nc = d[1] + node.col\n\t\t\t\tif (nr < 0 || nc < 0 || nr >= grid.length || nc >= grid[0].length)\n\t\t\t\t\tcontinue\n\t\t\t\tif (grid[nr][nc].isWall) continue\n\t\t\t\tif (grid[nr][nc].isVisited) continue\n\t\t\t\tif (nr == targetNode.row && nc == targetNode.col) {\n\t\t\t\t\tgrid[nr][nc].previousNode = grid[node.row][node.col]\n\t\t\t\t\tvisitedNodes.push(grid[nr][nc])\n\t\t\t\t\treturn visitedNodes\n\t\t\t\t}\n\t\t\t\tgrid[nr][nc].isVisited = true\n\t\t\t\tgrid[nr][nc].previousNode = grid[node.row][node.col]\n\t\t\t\tvisitedNodes.push(grid[nr][nc])\n\t\t\t\tstack.push(grid[nr][nc])\n\t\t\t}\n\t\t}\n\t}\n\treturn visitedNodes\n}\n\nexport function getShortestPath(target) {\n\tconst order = []\n\tlet current = target\n\twhile (current !== null) {\n\t\tconsole.log('tree')\n\t\tconsole.log(current.previousNode)\n\t\torder.unshift(current)\n\t\tcurrent = current.previousNode\n\t}\n\treturn order\n}\n","export function genRandomMaze(rows, cols, start, target) {\n\tconst walls = []\n\tfor (let i = 0; i < rows; ++i) {\n\t\tconst row = []\n\t\tfor (let j = 0; j < cols; ++j) {\n\t\t\tif (\n\t\t\t\t(i == start[0] && j == start[1]) ||\n\t\t\t\t(i == target[0] && j == target[1])\n\t\t\t) {\n\t\t\t\trow.push(false)\n\t\t\t} else {\n\t\t\t\trow.push(probability(0.2))\n\t\t\t}\n\t\t}\n\t\twalls.push(row)\n\t}\n\treturn walls\n}\n\nexport function genRecursizeMaze(rows, cols, start, target) {\n\tconst walls = []\n\tfor (let i = 0; i < rows; ++i) {\n\t\tconst row = []\n\t\tfor (let j = 0; j < cols; ++j) {\n\t\t\trow.push(probability(0.2))\n\t\t}\n\t\twalls.push(row)\n\t}\n\treturn walls\n}\n\nvar probability = function(n) {\n\treturn !!n && Math.random() <= n\n}\n","import React from 'react'\nimport Node from './node/node'\nimport { Button } from '@material-ui/core'\nimport { dfs, bfs, getShortestPath } from '../../algorithms/bfs'\nimport './grid.css'\nimport { genRandomMaze, genRecursizeMaze } from '../../algorithms/maze_gen'\n\nexport const TOTAL_ROWS = 30\nexport const TOTAL_COLS = 60\n\nconst SPEED_MULTIPLIER = 5\nconst PATH_SPEED_MULTIPLIER = 40\n\nclass Grid extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tconst { start_row, start_col, target_row, target_col } = getNewEndpoints()\n\n\t\tthis.state = {\n\t\t\tstart: [start_row, start_col],\n\t\t\ttarget: [target_row, target_col],\n\t\t\tgrid: [],\n\t\t\tmouseIsPressed: false,\n\t\t\talgorithm: bfs\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { start, target } = this.state\n\t\tconst grid = genInitialGrid(start, target)\n\t\tthis.setState({ grid: grid })\n\t}\n\n\thandleMouseDown(row, col) {\n\t\tconst { start, target } = this.state\n\t\tif (\n\t\t\t(row == start[0] && col == start[1]) ||\n\t\t\t(row == target[0] && col == target[1])\n\t\t)\n\t\t\treturn\n\t\tconst newGrid = toggleWall(this.state.grid, row, col)\n\t\tthis.setState({ grid: newGrid, mouseIsPressed: true })\n\t}\n\n\thandleMouseEnter(row, col) {\n\t\tif (!this.state.mouseIsPressed) return\n\t\tconst { start, target } = this.state\n\t\tif (\n\t\t\t(row == start[0] && col == start[1]) ||\n\t\t\t(row == target[0] && col == target[1])\n\t\t)\n\t\t\treturn\n\t\tconst newGrid = toggleWall(this.state.grid, row, col)\n\t\tthis.setState({ grid: newGrid })\n\t}\n\n\thandleMouseUp() {\n\t\tthis.setState({ mouseIsPressed: false })\n\t}\n\n\tresetGrid() {\n\t\tconst { start_row, start_col, target_row, target_col } = getNewEndpoints()\n\t\tconst grid = getNewGrid([start_row, start_col], [target_row, target_col])\n\n\t\tthis.setState({\n\t\t\tgrid: grid,\n\t\t\tstart: [start_row, start_col],\n\t\t\ttarget: [target_row, target_col]\n\t\t})\n\t}\n\n\tanimateBFS(nodes, shortestOrder) {\n\t\tfor (let i = 0; i <= nodes.length; ++i) {\n\t\t\tif (i === nodes.length) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.animateShortestPath(shortestOrder)\n\t\t\t\t}, SPEED_MULTIPLIER * i)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (i == nodes.length - 1) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tconst node = nodes[i]\n\t\t\tconsole.log('test')\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t'node node-visited'\n\t\t\t}, SPEED_MULTIPLIER * i)\n\t\t}\n\t}\n\n\tanimateShortestPath(shortestOrder) {\n\t\tfor (let i = 0; i < shortestOrder.length; i++) {\n\t\t\tif (i == 0 || i == shortestOrder.length - 1) continue\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst node = shortestOrder[i]\n\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t'node node-shortest-path'\n\t\t\t}, PATH_SPEED_MULTIPLIER * i)\n\t\t}\n\t}\n\n\tvisualize() {\n\t\tconst { grid, start, target, algorithm } = this.state\n\t\tconst startNode = grid[start[0]][start[1]]\n\t\tconst targetNode = grid[target[0]][target[1]]\n\t\tconst visited = algorithm(grid, startNode, targetNode)\n\t\tconst shortestOrder = getShortestPath(visited[visited.length - 1])\n\t\tthis.animateBFS(visited, shortestOrder)\n\t}\n\n\tgenerateMaze(algorithm) {\n\t\tconst { start, target } = this.state\n\n\t\tconst grid = algorithm(start, target)\n\n\t\tthis.setState({\n\t\t\tgrid: grid\n\t\t})\n\t}\n\n\tgenRecursiveMaze() {}\n\n\trender() {\n\t\tconst { grid } = this.state\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='secondary'\n\t\t\t\t\tonClick={() => this.resetGrid()}\n\t\t\t\t>\n\t\t\t\t\treset\n\t\t\t\t</Button>\n\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='secondary'\n\t\t\t\t\tonClick={() => this.generateMaze(randomMaze)}\n\t\t\t\t>\n\t\t\t\t\tgenerate random maze\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='secondary'\n\t\t\t\t\tonClick={() => this.generateMaze(recursiveMaze)}\n\t\t\t\t>\n\t\t\t\t\tgenerate recursive maze\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tonClick={() => this.visualize()}\n\t\t\t\t>\n\t\t\t\t\tstart\n\t\t\t\t</Button>\n\t\t\t\t<table id='board' className='grid'>\n\t\t\t\t\t{grid.map((row, rowIdx) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={rowIdx}>\n\t\t\t\t\t\t\t\t{row.map((node, nodeIdx) => {\n\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\trow,\n\t\t\t\t\t\t\t\t\t\tcol,\n\t\t\t\t\t\t\t\t\t\tisStart,\n\t\t\t\t\t\t\t\t\t\tisTarget,\n\t\t\t\t\t\t\t\t\t\tisVisited,\n\t\t\t\t\t\t\t\t\t\tisWall\n\t\t\t\t\t\t\t\t\t} = node\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Node\n\t\t\t\t\t\t\t\t\t\t\trow={row}\n\t\t\t\t\t\t\t\t\t\t\tcol={col}\n\t\t\t\t\t\t\t\t\t\t\tkey={nodeIdx}\n\t\t\t\t\t\t\t\t\t\t\tisStart={isStart}\n\t\t\t\t\t\t\t\t\t\t\tisTarget={isTarget}\n\t\t\t\t\t\t\t\t\t\t\tisVisited={isVisited}\n\t\t\t\t\t\t\t\t\t\t\tisWall={isWall}\n\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(row, col) => this.handleMouseDown(row, col)}\n\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={(row, col) =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleMouseEnter(row, col)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tonMouseUp={() => this.handleMouseUp()}\n\t\t\t\t\t\t\t\t\t\t></Node>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst genInitialGrid = (start, target) => {\n\tconst grid = []\n\tfor (let i = 0; i < TOTAL_ROWS; ++i) {\n\t\tconst row = []\n\t\tfor (let j = 0; j < TOTAL_COLS; ++j) {\n\t\t\trow.push(createNode(i, j, start, target))\n\t\t}\n\t\tgrid.push(row)\n\t}\n\treturn grid\n}\n\nconst getNewEndpoints = () => {\n\tvar start_row = getRandomInt(1, TOTAL_ROWS - 2)\n\tvar start_col = getRandomInt(1, TOTAL_COLS - 2)\n\tvar target_row = getRandomInt(1, TOTAL_ROWS - 2)\n\tvar target_col = getRandomInt(1, TOTAL_COLS - 2)\n\twhile (start_row == target_row && start_col == target_col) {\n\t\ttarget_row = getRandomInt(1, TOTAL_ROWS - 2)\n\t\ttarget_col = getRandomInt(1, TOTAL_COLS - 2)\n\t}\n\treturn { start_row, start_col, target_row, target_col }\n}\n\nconst getNewGrid = (start, target) => {\n\tconst grid = []\n\tfor (let i = 0; i < TOTAL_ROWS; ++i) {\n\t\tconst row = []\n\t\tfor (let j = 0; j < TOTAL_COLS; ++j) {\n\t\t\trow.push(getEmptyNode(i, j))\n\t\t\tif (i != start[0] && j != start[1] && i != target[0] && j != target[1]) {\n\t\t\t\tdocument.getElementById(`node-${i}-${j}`).className = 'node node-empty'\n\t\t\t}\n\t\t}\n\t\tgrid.push(row)\n\t}\n\tgrid[start[0]][start[1]].isStart = true\n\tgrid[target[0]][target[1]].isTarget = true\n\n\treturn grid\n}\n\nconst randomMaze = (start, target) => {\n\tconst grid = getNewGrid(start, target)\n\tconst walls = genRandomMaze(TOTAL_ROWS, TOTAL_COLS, start, target)\n\tfor (let i = 0; i < TOTAL_ROWS; ++i) {\n\t\tfor (let j = 0; j < TOTAL_COLS; ++j) {\n\t\t\tif (walls[i][j]) {\n\t\t\t\ttoggleWall(grid, i, j)\n\t\t\t}\n\t\t}\n\t}\n\tfor (let i = 0; i < TOTAL_ROWS; ++i) {\n\t\ttoggleWall(grid, i, 0)\n\t\ttoggleWall(grid, i, TOTAL_COLS - 1)\n\t}\n\tfor (let j = 0; j < TOTAL_COLS; ++j) {\n\t\ttoggleWall(grid, 0, j)\n\t\ttoggleWall(grid, TOTAL_ROWS - 1, j)\n\t}\n\treturn grid\n}\n\nconst recursiveMaze = (start, target) => {\n\tconst grid = getNewGrid()\n\tconst walls = genRecursizeMaze(TOTAL_ROWS, TOTAL_COLS, start, target)\n\tfor (let i = 0; i < TOTAL_ROWS; ++i) {\n\t\tfor (let j = 0; j < TOTAL_COLS; ++j) {\n\t\t\tif (walls[i][j]) {\n\t\t\t\ttoggleWall(grid, i, j)\n\t\t\t}\n\t\t}\n\t}\n\tfor (let i = 0; i < TOTAL_ROWS; ++i) {\n\t\ttoggleWall(grid, i, 0)\n\t\ttoggleWall(grid, i, TOTAL_COLS - 1)\n\t}\n\tfor (let j = 0; j < TOTAL_COLS; ++j) {\n\t\ttoggleWall(grid, 0, j)\n\t\ttoggleWall(grid, TOTAL_ROWS - 1, j)\n\t}\n\treturn grid\n}\n\nconst getEmptyNode = (row, col) => {\n\treturn {\n\t\trow,\n\t\tcol,\n\t\tisStart: false,\n\t\tisTarget: false,\n\t\tisVisited: false,\n\t\tisWall: false,\n\t\tpreviousNode: null\n\t}\n}\n\nconst createNode = (row, col, start, target) => {\n\treturn {\n\t\trow,\n\t\tcol,\n\t\tisStart: row == start[0] && col == start[1],\n\t\tisTarget: row == target[0] && col == target[1],\n\t\tisVisited: false,\n\t\tisWall: false,\n\t\tpreviousNode: null\n\t}\n}\n\nconst toggleWall = (grid, row, col) => {\n\tconst newGrid = grid.slice()\n\tconst node = newGrid[row][col]\n\tconst newNode = {\n\t\t...node,\n\t\tisWall: true\n\t}\n\tnewGrid[row][col] = newNode\n\treturn newGrid\n}\n\nfunction getRandomInt(min, max) {\n\tmin = Math.ceil(min)\n\tmax = Math.floor(max)\n\treturn Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport default Grid\n","import React from 'react'\nimport { Button } from '@material-ui/core'\n\nexport default class Navstrip extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='rows'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<h1>Pathfinder</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<Button>test</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { theme } from '../styles/mui_theme'\nimport Grid from './grid/grid'\nimport './App.css'\nimport Navstrip from './navstrip/navstrip'\n\nfunction App() {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<Grid />\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}